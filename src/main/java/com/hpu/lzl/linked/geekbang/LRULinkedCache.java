package com.hpu.lzl.linked.geekbang;

/**
*   
* @author:awo  
* @time:2018/10/3  上午9:44 
* @Description:
 * 其实都可以借助java集合的工具类来实现
 * 基于链表的LRU缓存算法:
 * 1.当查找一个数据a，首先遍历链表，如果数据存在，就将原来位置的数据删除，并将新数据插入到链表头部。
 * 2.如果数据不存在，需要做以下判断
 * 2.1 缓存列表未满，将数据插入链表头部
 * 2.2 缓存列表已满，将链表尾部数据删除，并将数据插入到链表头部
 * 基于数组的LRU缓存算法:
 * 1. 遍历查找数组，如果数据存在，将原来位置k的数据删除，将k之前的数据向后移动，并将数据插入到数组的第一个位置
 * 2. 数据不存在，做以下操作
 * 2.1 数组后移，腾出第一个位置。
**/  
public class LRULinkedCache {
}
